// <auto-generated />
using System;
using KoiPondConstruct.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiPondConstruct.Data.Migrations
{
    [DbContext(typeof(FA24_SE1702_PRN221_G2_KoiPondConstructContext))]
    partial class FA24_SE1702_PRN221_G2_KoiPondConstructContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblCustomerRequest", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("priority");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__tbl_cust__3213E83F04C307BE");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_customer_request", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblCustomerRequestDetail", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<long>("Budget")
                        .HasColumnType("bigint")
                        .HasColumnName("budget");

                    b.Property<long>("Height")
                        .HasColumnType("bigint")
                        .HasColumnName("height");

                    b.Property<DateOnly>("HomeownerDateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("homeowner_date_of_birth");

                    b.Property<string>("HomeownerFirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("homeowner_first_name");

                    b.Property<string>("HomeownerLastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("homeowner_last_name");

                    b.Property<string>("HomeownerPhone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("homeowner_phone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<long>("Length")
                        .HasColumnType("bigint")
                        .HasColumnName("length");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint")
                        .HasColumnName("request_id");

                    b.Property<long>("SampleDesignId")
                        .HasColumnType("bigint")
                        .HasColumnName("sample_design_id");

                    b.Property<string>("Shape")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("shape");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<long>("Width")
                        .HasColumnType("bigint")
                        .HasColumnName("width");

                    b.HasKey("Id")
                        .HasName("PK__tbl_cust__3213E83FDA2F4631");

                    b.HasIndex("RequestId");

                    b.HasIndex("SampleDesignId");

                    b.ToTable("tbl_customer_request_detail", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblDesign", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime>("ApprovedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("approved_time");

                    b.Property<string>("ContentText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<long>("RequestDetailId")
                        .HasColumnType("bigint")
                        .HasColumnName("request_detail_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.HasKey("Id")
                        .HasName("tbl_design_id_primary");

                    b.HasIndex(new[] { "RequestDetailId" }, "UQ__tbl_desi__5A4D1BEA8FACACD6")
                        .IsUnique();

                    b.ToTable("tbl_design", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblFeedback", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("AttachedFile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("attached_file");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsSolved")
                        .HasColumnType("bit")
                        .HasColumnName("is_solved");

                    b.Property<long>("SuggestionDocId")
                        .HasColumnType("bigint")
                        .HasColumnName("suggestion_doc_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("tbl_feedback_id_primary");

                    b.HasIndex("SuggestionDocId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_feedback", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblImgRefer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime>("DeletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_time");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("img_url");

                    b.HasKey("Id")
                        .HasName("tbl_img_refer_id_primary");

                    b.ToTable("tbl_img_refer", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblInspection", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("DesignId")
                        .HasColumnType("bigint")
                        .HasColumnName("design_id");

                    b.Property<string>("Findings")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("findings");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("inspection_date");

                    b.Property<long>("InspectorId")
                        .HasColumnType("bigint")
                        .HasColumnName("inspector_id");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("recommendations");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("severity");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__tbl_insp__3213E83FA9AF3631");

                    b.HasIndex(new[] { "DesignId" }, "UQ__tbl_insp__1BA5C3FAA0ACCC8F")
                        .IsUnique();

                    b.ToTable("tbl_inspection", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblInspectionDetail", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("attribute");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<string>("ExpectedValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("expected_value");

                    b.Property<long>("InspectionId")
                        .HasColumnType("bigint")
                        .HasColumnName("inspection_id");

                    b.Property<string>("ObservedValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observed_value");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("result");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("severity");

                    b.HasKey("Id")
                        .HasName("PK__tbl_insp__3213E83FC6B4C385");

                    b.HasIndex("InspectionId");

                    b.ToTable("tbl_inspection_detail", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblPriceContractCost", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<long>("PriceReferId")
                        .HasColumnType("bigint")
                        .HasColumnName("price_refer_id");

                    b.Property<long>("QuotationCostId")
                        .HasColumnType("bigint")
                        .HasColumnName("quotation_cost_id");

                    b.Property<long>("Total")
                        .HasColumnType("bigint")
                        .HasColumnName("total");

                    b.HasKey("Id")
                        .HasName("tbl_price_contract_cost_id_primary");

                    b.HasIndex("PriceReferId");

                    b.HasIndex("QuotationCostId");

                    b.ToTable("tbl_price_contract_cost", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblPriceRefer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("currency");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("size");

                    b.Property<string>("SizeUnit")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("size_unit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.HasKey("Id")
                        .HasName("tbl_price_refer_id_primary");

                    b.ToTable("tbl_price_refer", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblQuotationCost", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime>("ApprovedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("approved_time");

                    b.Property<string>("ContentText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("currency");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<long>("RequestDetailId")
                        .HasColumnType("bigint")
                        .HasColumnName("request_detail_id");

                    b.Property<long>("Total")
                        .HasColumnType("bigint")
                        .HasColumnName("total");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.HasKey("Id")
                        .HasName("tbl_quotation_cost_id_primary");

                    b.HasIndex(new[] { "RequestDetailId" }, "UQ__tbl_quot__5A4D1BEA97EC8145")
                        .IsUnique();

                    b.ToTable("tbl_quotation_cost", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblSampleDesign", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime>("ApprovedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("approved_time");

                    b.Property<string>("ContentText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file");

                    b.Property<long>("ImgId")
                        .HasColumnType("bigint")
                        .HasColumnName("img_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.HasKey("Id")
                        .HasName("tbl_sample_design_id_primary");

                    b.ToTable("tbl_sample_design", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblSampleDesignImgRefer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("ImgReferId")
                        .HasColumnType("bigint")
                        .HasColumnName("img_refer_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<long>("SampleDesignId")
                        .HasColumnType("bigint")
                        .HasColumnName("sample_design_id");

                    b.HasKey("Id")
                        .HasName("PK__tbl_samp__3213E83FB69DC0EB");

                    b.HasIndex("ImgReferId");

                    b.HasIndex("SampleDesignId");

                    b.ToTable("tbl_sample_design_img_refer", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblStatus", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("DesignId")
                        .HasColumnType("bigint")
                        .HasColumnName("design_id");

                    b.Property<string>("EvidenceFile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("evidence_file");

                    b.Property<string>("EvidenceText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("evidence_text");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit")
                        .HasColumnName("is_current");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit")
                        .HasColumnName("is_final");

                    b.Property<string>("OrderStatusName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("order_status_name");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.HasKey("Id")
                        .HasName("tbl_status_id_primary");

                    b.HasIndex("DesignId");

                    b.ToTable("tbl_status", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblSuggestionDoc", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime>("ApprovedTiem")
                        .HasColumnType("datetime")
                        .HasColumnName("approved_tiem");

                    b.Property<string>("ContentText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsFirstItem")
                        .HasColumnType("bit")
                        .HasColumnName("is_first_item");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<long>("RequestDetailId")
                        .HasColumnType("bigint")
                        .HasColumnName("request_detail_id");

                    b.Property<long>("SampleDesignId")
                        .HasColumnType("bigint")
                        .HasColumnName("sample_design_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.HasKey("Id")
                        .HasName("tbl_suggestion_doc_id_primary");

                    b.HasIndex("RequestDetailId");

                    b.HasIndex(new[] { "SampleDesignId" }, "UQ__tbl_sugg__C675143A6D2B672D")
                        .IsUnique();

                    b.ToTable("tbl_suggestion_doc", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("AvatarImg")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar_img");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_time")
                        .HasDefaultValueSql("('NOW')");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_time");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("tbl_user_id_primary");

                    b.HasIndex(new[] { "Email" }, "tbl_user_email_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "PhoneNumber" }, "tbl_user_phone_number_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "tbl_user_username_unique")
                        .IsUnique();

                    b.ToTable("tbl_user", (string)null);
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblCustomerRequest", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblUser", "User")
                        .WithMany("TblCustomerRequests")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_customer_request_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblCustomerRequestDetail", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblCustomerRequest", "Request")
                        .WithMany("TblCustomerRequestDetails")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_customer_request_detail_request_id");

                    b.HasOne("KoiPondConstruct.Data.Entities.TblSampleDesign", "SampleDesign")
                        .WithMany("TblCustomerRequestDetails")
                        .HasForeignKey("SampleDesignId")
                        .IsRequired()
                        .HasConstraintName("fk_customer_request_detail_sample_design_id");

                    b.Navigation("Request");

                    b.Navigation("SampleDesign");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblDesign", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblCustomerRequestDetail", "RequestDetail")
                        .WithOne("TblDesign")
                        .HasForeignKey("KoiPondConstruct.Data.Entities.TblDesign", "RequestDetailId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_design_request_detail_id");

                    b.Navigation("RequestDetail");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblFeedback", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblSuggestionDoc", "SuggestionDoc")
                        .WithMany("TblFeedbacks")
                        .HasForeignKey("SuggestionDocId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_feedback_suggestion_doc_id");

                    b.HasOne("KoiPondConstruct.Data.Entities.TblUser", "User")
                        .WithMany("TblFeedbacks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_feedback_user_id");

                    b.Navigation("SuggestionDoc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblInspection", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblDesign", "Design")
                        .WithOne("TblInspection")
                        .HasForeignKey("KoiPondConstruct.Data.Entities.TblInspection", "DesignId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_inspection_design_id");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblInspectionDetail", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblInspection", "Inspection")
                        .WithMany("TblInspectionDetails")
                        .HasForeignKey("InspectionId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_inspection_detail_inspection_id");

                    b.Navigation("Inspection");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblPriceContractCost", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblPriceRefer", "PriceRefer")
                        .WithMany("TblPriceContractCosts")
                        .HasForeignKey("PriceReferId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_price_contract_cost_price_refer_id");

                    b.HasOne("KoiPondConstruct.Data.Entities.TblQuotationCost", "QuotationCost")
                        .WithMany("TblPriceContractCosts")
                        .HasForeignKey("QuotationCostId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_price_contract_cost_quotation_cost_id");

                    b.Navigation("PriceRefer");

                    b.Navigation("QuotationCost");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblQuotationCost", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblCustomerRequestDetail", "RequestDetail")
                        .WithOne("TblQuotationCost")
                        .HasForeignKey("KoiPondConstruct.Data.Entities.TblQuotationCost", "RequestDetailId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_quotation_cost_request_detail_id");

                    b.Navigation("RequestDetail");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblSampleDesignImgRefer", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblImgRefer", "ImgRefer")
                        .WithMany("TblSampleDesignImgRefers")
                        .HasForeignKey("ImgReferId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_img_refer");

                    b.HasOne("KoiPondConstruct.Data.Entities.TblSampleDesign", "SampleDesign")
                        .WithMany("TblSampleDesignImgRefers")
                        .HasForeignKey("SampleDesignId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_sample_design");

                    b.Navigation("ImgRefer");

                    b.Navigation("SampleDesign");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblStatus", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblDesign", "Design")
                        .WithMany("TblStatuses")
                        .HasForeignKey("DesignId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_status_design_id");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblSuggestionDoc", b =>
                {
                    b.HasOne("KoiPondConstruct.Data.Entities.TblCustomerRequestDetail", "RequestDetail")
                        .WithMany("TblSuggestionDocs")
                        .HasForeignKey("RequestDetailId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_suggestion_doc_request_detail_id");

                    b.HasOne("KoiPondConstruct.Data.Entities.TblSampleDesign", "SampleDesign")
                        .WithOne("TblSuggestionDoc")
                        .HasForeignKey("KoiPondConstruct.Data.Entities.TblSuggestionDoc", "SampleDesignId")
                        .IsRequired()
                        .HasConstraintName("fk_tbl_suggestion_doc_sample_design_id");

                    b.Navigation("RequestDetail");

                    b.Navigation("SampleDesign");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblCustomerRequest", b =>
                {
                    b.Navigation("TblCustomerRequestDetails");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblCustomerRequestDetail", b =>
                {
                    b.Navigation("TblDesign");

                    b.Navigation("TblQuotationCost");

                    b.Navigation("TblSuggestionDocs");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblDesign", b =>
                {
                    b.Navigation("TblInspection");

                    b.Navigation("TblStatuses");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblImgRefer", b =>
                {
                    b.Navigation("TblSampleDesignImgRefers");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblInspection", b =>
                {
                    b.Navigation("TblInspectionDetails");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblPriceRefer", b =>
                {
                    b.Navigation("TblPriceContractCosts");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblQuotationCost", b =>
                {
                    b.Navigation("TblPriceContractCosts");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblSampleDesign", b =>
                {
                    b.Navigation("TblCustomerRequestDetails");

                    b.Navigation("TblSampleDesignImgRefers");

                    b.Navigation("TblSuggestionDoc");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblSuggestionDoc", b =>
                {
                    b.Navigation("TblFeedbacks");
                });

            modelBuilder.Entity("KoiPondConstruct.Data.Entities.TblUser", b =>
                {
                    b.Navigation("TblCustomerRequests");

                    b.Navigation("TblFeedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
